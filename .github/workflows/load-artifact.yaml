name: Load Artifact Workflow
on:
  workflow_call:
    inputs:
      workflow_run_id:
        required: true
        type: string
    outputs:
      pr-number:
        description: "The number of the PR"
        value: ${{ jobs.load-artifact.outputs.pr-number }}
        type: string
      skip-deployment:
        description: "Flag deciding whether or not deployment should be skipped or performed"
        value: ${{ jobs.load-artifact.outputs.skip-deployment }}
        type: boolean
      is-pull-request-event:
        description: "Flag containing information on whether this is a PR event or not"
        value: ${{ jobs.load-artifact.outputs.is-pull-request-event }}
        type: boolean
      bunnyshell-yaml-contents:
        description: "The bunnyshell.yaml contents"
        value: ${{ jobs.load-artifact.outputs.bunnyshell-yaml-contents }}
        type: string
jobs:
  load-artifact:
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ env.PR_NUMBER }}
      skip-deployment: ${{ fromJSON(env.FLAGS_JSON).skip_deployment }}
      is-pull-request-event: ${{ fromJSON(env.EVENT_JSON).pull_request != '' }}
      bunnyshell-yaml-contents: ${{ env.BUNNYSHELL_YAML_CONTENTS }}
    steps:
      - name: Download artifact
        id: download
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ inputs.workflow_run_id }},
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "bunnyshell"
            })[0];
            if (matchArtifact === undefined) {
              throw TypeError('Build Artifact not found!');
            }
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/artifact.zip`, Buffer.from(download.data));

      - name: Load artifact data
        id: load_data
        run: |
          unzip artifact.zip
          echo 'EVENT_JSON<<EOFEVENTJSON' >> $GITHUB_ENV
          cat event.json >> $GITHUB_ENV
          echo -e '\nEOFEVENTJSON' >> $GITHUB_ENV
          echo 'FLAGS_JSON<<EOFFLAGSJSON' >> $GITHUB_ENV
          cat flags.json >> $GITHUB_ENV
          echo -e '\nEOFFLAGSJSON' >> $GITHUB_ENV
          if [ -f "bunnyshell.yaml" ]; then
            echo 'BUNNYSHELL_YAML_CONTENTS<<EOFBNSYAML' >> $GITHUB_ENV
            cat bunnyshell.yaml >> $GITHUB_ENV
            echo -e '\nEOFBNSYAML' >> $GITHUB_ENV
          fi

      - name: Set variables
        id: set_variables
        run: |
          echo "debug"
          cat event.json
          echo "pr_number=$(jq -r '.issue.number // .number' event.json)"
          echo "pr_number=$(jq -r '.issue.number // .number' event.json)" >> $GITHUB_ENV
          echo "skip_deployment=$(jq -r '.skip_deployment' flags.json)" >> $GITHUB_ENV
          echo "is_pull_request_event=$(jq -r '.pull_request != null' event.json)" >> $GITHUB_ENV
