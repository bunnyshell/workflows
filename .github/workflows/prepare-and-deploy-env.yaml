name: Deploy Bunnyshell Environment
on:
  workflow_call:
    inputs:
      runs-on:
        description: The Platform to execute on
        type: string
        default: ubuntu-latest
      git-ref:
        description: The Git ref to use
        type: string
        required: true
      project-id:
        description: The Bunnyshell Project to use
        required: true
        type: string
      cluster-id:
        description: The Bunnyshell Cluster to use
        required: true
        type: string
      env-id:
        description: The ID of the Environment
        type: string
      env-name:
        description: The name of the Environment
        type: string
      allowed-users:
        description: The list of the allowed usernames (JSON list). Use '*' for all users.
        type: string
      comment-on-pr:
        description: Write PR comments
        type: boolean
        default: false
      pr-number:
        description: The number of the PR on which to write the comments
        type: string
        required: false
      restricted-files:
        description: File paths (glob patterns) that will prevent the environment from being automatically deployed.
        type: string
      deploy-as-stopped:
        description: Deploy the environment and then stop it
        type: boolean
        default: false
      bunnyshell-yaml-path:
        description: Either one of bunnyshell-yaml-path or bunnyshell-yaml-contents is required.
        required: false
        type: string
      bunnyshell-yaml-contents:
        description: Either one of bunnyshell-yaml-path or bunnyshell-yaml-contents is required.
        required: false
        type: string
      bunnyshell-cli-version:
        description: The version of the Bunnyshell CLI to use
        type: string
        default: v0.18.0
    secrets:
      bunnyshell-access-token:
        required: true
      bunnyshell-yaml-contents-encryption-passphrase:
        description: The secret used to encode input.bunnyshell-yaml-contents
        required: false
    outputs:
      env-id:
        description: The ID of the Environment
        value: ${{ jobs.deploy.outputs.env-id }}
      endpoints-json:
        description: The environment endpoints as JSON
        value: ${{ jobs.deploy.outputs.env-endpoints }}
permissions:
  pull-requests: write
jobs:
  checks:
    name: Checks
    runs-on: ${{ inputs.runs-on }}
    if: ${{ github.event_name != 'issue_comment' || (
        github.event.issue.pull_request
        && contains(github.event.comment.body, '/bns:deploy')
        && (inputs.allowed-users == '*' || contains(fromJSON(inputs.allowed-users), github.event.sender.login))
      ) }}
    steps:
      - name: Check bunnyshell.yaml input
        if: ${{ inputs.bunnyshell-yaml-path == '' && inputs.bunnyshell-yaml-contents == '' }}
        run: |
          echo "Either one of bunnyshell-yaml-path or bunnyshell-yaml-contents is required."
          exit 1
      - name: Check if approved deployment
        id: check-approved-deployment
        env:
          IS_APPROVED_DEPLOY_COMMAND: ${{ github.event.issue.pull_request
              && contains(github.event.comment.body, '/bns:deploy')
              && (inputs.allowed-users == '*' || contains(fromJSON(inputs.allowed-users), github.event.sender.login))
            }}
        run: |          
          if [ "$IS_APPROVED_DEPLOY_COMMAND" != "true" ]; then
            echo 'Deployment will not be allowed if restricted files were changed (See `restricted-files` and `allowed-users` options)'
            echo ':speech_balloon: Deployment will not be allowed if restricted files were changed (See `restricted-files` and `allowed-users` options)' >> $GITHUB_STEP_SUMMARY
          else
            echo 'Deployment will be allowed even if restricted files were changed (See `restricted-files` option)'
            echo ':white_check_mark: Deployment will be allowed even if restricted files were changed (See `restricted-files` option)' >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "$IS_APPROVED_DEPLOY_COMMAND" = "true" ]; then
            echo "bns-env-approved=true" >> $GITHUB_OUTPUT
          fi
      - name: Check out the repo
        uses: actions/checkout@v3
        if: ${{ steps.check-approved-deployment.outputs.bns-env-approved != 'true' }}
        with:
          fetch-depth: 0
      - name: Test for restricted files changes
        id: changed-restricted-files
        if: ${{ inputs.restricted-files != '' && steps.check-approved-deployment.outputs.bns-env-approved != 'true' }}
        uses: tj-actions/changed-files@v36
        with:
          files: ${{ inputs.restricted-files }}
      - name: Comment with PR Environment paused
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ inputs.comment-on-pr && steps.changed-restricted-files.outputs.any_modified == 'true' }}
        with:
          message: |
            ### Preview Environment creation on [Bunnyshell](https://www.bunnyshell.com) paused
            
            #### Needs approval due to restricted files changes
            
            Add a comment containing `/bns:deploy` to approve the creation of the environment.
            
            Please note that you must be in the allowed users list. See `allowed-users` option.
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Abort due to restricted files changes
        if: ${{ steps.changed-restricted-files.outputs.any_modified == 'true' }}
        run: |
          echo "Restricted files changes detected, aborting. The deployment will need explicit permission. See comment on PR for instructions."
          echo ":exclamation: Restricted files changes detected, aborting. The deployment will need explicit permission. See comment on PR for instructions." >> $GITHUB_STEP_SUMMARY
  
          exit 1
      - name: Output for no restricted files changes
        if: ${{ steps.changed-restricted-files.outputs.any_modified == 'false' }}
        run: |
          echo "No changes detected in restricted files, continuing."
          echo ":white_check_mark: No changes detected in restricted files, continuing." >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy Environment
    needs: checks
    runs-on: ${{ inputs.runs-on }}
    outputs:
      env-id: ${{ env.BNS_ENV_ID }}
      env-endpoints: ${{ env.BNS_ENV_ENDPOINTS }}
      env-created: ${{ env.BNS_ENV_CREATED }}
      pipeline-id: ${{ env.BNS_PIPELINE_ID }}
    steps:
      - name: Comment with PR Environment will be deployed
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ inputs.pr-number != '' }}
        with:
          message: |
            ### :rocket: Preview Environment will be deployed on [Bunnyshell](https://www.bunnyshell.com)
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Setup yq
        uses: frenck/action-setup-yq@v1
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0
      - name: Prepare vars
        run: |
          echo "BNS_GIT_SHA=`git rev-parse --short HEAD`" >> "$GITHUB_ENV"
      - name: Search for Environment
        uses: addnab/docker-run-action@v3
        if: ${{ inputs.pr-number != '' }}
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -v ${{ github.env }}:/github/envs.txt
            -v ${{ github.step_summary }}:/github/step_summary.txt
          run: |
            set -e
  
            BNS_ENV_ID=`bns environments list --label "auto-gha=pr-${{ inputs.pr-number }}" --project ${{ inputs.project-id }} --non-interactive -o json \
              | jq -r "try ._embedded.item[0].id | select (.!=null)"`
  
            if [ -z "$BNS_ENV_ID" ]; then
              echo "No environment exists with label 'auto-gha=pr-${{ inputs.pr-number }}'."
              echo ":speech_balloon: No environment exists with label 'auto-gha=pr-${{ inputs.pr-number }}'." >> /github/step_summary.txt
            else
              echo "Found environment ID $BNS_ENV_ID"
              echo ":mag: Found environment ID $BNS_ENV_ID." >> /github/step_summary.txt
            fi
  
            echo "BNS_ENV_ID=$BNS_ENV_ID" >> /github/envs.txt
      - name: Check existing Environment
        uses: addnab/docker-run-action@v3
        if: ${{ inputs.env-id || env.BNS_ENV_ID }}
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_ENVIRONMENT=${{ inputs.env-id || env.BNS_ENV_ID }}
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -v ${{ github.env }}:/github/envs.txt
          run: |
            set -e
  
            echo "BNS_ENV_ID=`bns environments show --non-interactive -o json \
              | jq -r 'try .id | select (.!=null)'`" >> /github/envs.txt
            
            echo "Environment ID is ${{ inputs.env-id || env.BNS_ENV_ID }}"
      - name: Prepare bunnyshell.yaml
        run: |
          set -e

          if [ "${{ inputs.bunnyshell-yaml-path }}" != "" ]; then
            yq "(.components[] | select(.gitBranch != null)).gitBranch |= \"${{ env.BNS_GIT_SHA }}\"" ${{ inputs.bunnyshell-yaml-path }} > bunnyshell_wf_updated.yaml
          else
            if [ "${{ secrets.bunnyshell-yaml-contents-encryption-passphrase }}" != "" ]; then
               gpg --decrypt --quiet --batch --passphrase "${{ secrets.bunnyshell-yaml-contents-encryption-passphrase }}" --output bunnyshell_wf_updated.yaml <(echo "${{ inputs.bunnyshell-yaml-contents }}" | base64 -d)
            else
               printf "%s" "${{ inputs.bunnyshell-yaml-contents }}" > bunnyshell_wf_updated.yaml
            fi
          fi
          
          echo 'Environment definition (`bunnyshell.yaml`) prepared'
          echo ':white_check_mark: Environment definition (`bunnyshell.yaml`) prepared' >> $GITHUB_STEP_SUMMARY
      - name: Create Environment
        uses: addnab/docker-run-action@v3
        if: "${{ env.BNS_ENV_ID == '' }}"
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -v ${{ github.workspace }}:/work
            -v ${{ github.env }}:/github/envs.txt
            -v ${{ github.step_summary }}:/github/step_summary.txt
          run: |
            set -e
  
            echo "BNS_ENV_CREATED=1" >> /github/envs.txt
  
            CREATE_ENV_OUTPUT=`bns environments create --name "${{ inputs.env-name }}" --from-path /work/bunnyshell_wf_updated.yaml \
              --label "auto-gha=pr-${{ inputs.pr-number }}" \
              --k8s "${{ inputs.cluster-id }}" --project ${{ inputs.project-id }} --non-interactive -o json`
            if [ "$?" != "0" ]; then
              echo "Failed to create the environment: $CREATE_ENV_OUTPUT"
              exit 1
            fi
            
            BNS_ENV_ID=`echo "$CREATE_ENV_OUTPUT" | jq -r '.id'`
            
            echo "BNS_ENV_ID=$BNS_ENV_ID" >> /github/envs.txt
            
            echo "Environment created (ID $BNS_ENV_ID)"
            echo ":white_check_mark: Environment created (ID $BNS_ENV_ID)" >> /github/step_summary.txt
      - name: Comment with PR Environment deploying
        uses: thollander/actions-comment-pull-request@v2
        if: "${{ env.BNS_ENV_ID != '' }}"
        with:
          message: |
            ### :rocket: Preview Environment is deploying on [Bunnyshell](https://www.bunnyshell.com)...

            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ env.BNS_ENV_ID }})
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Update Environment definition
        uses: addnab/docker-run-action@v3
        if: "${{ env.BNS_ENV_ID != '' }}"
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -e BUNNYSHELL_ENVIRONMENT=${{ env.BNS_ENV_ID }}
            -v ${{ github.workspace }}:/work
            -v ${{ github.step_summary }}:/github/step_summary.txt
          run: |
            bns environments update-configuration --from-path /work/bunnyshell_wf_updated.yaml --non-interactive -o stylish
            
            echo "Environment definition updated"
            echo ":white_check_mark: Environment definition updated" >> /github/step_summary.txt
      - name: Deploy Environment - trigger
        uses: addnab/docker-run-action@v3
        if: "${{ env.BNS_ENV_ID != '' }}"
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -e BUNNYSHELL_ENVIRONMENT=${{ env.BNS_ENV_ID }}
            -v ${{ github.env }}:/github/envs.txt
            -v ${{ github.step_summary }}:/github/step_summary.txt
          run: |
            set -e
            
            ENV_OPERATION_STATUS=`bns environments show --non-interactive -o json | jq -r '.operationStatus'`
            if [ "$ENV_OPERATION_STATUS" != "stopped" ] && [ "$ENV_OPERATION_STATUS" != "running" ] && [ "$ENV_OPERATION_STATUS" != "draft" ] && [ "$ENV_OPERATION_STATUS" != "deployment_failed" ] && [ "$ENV_OPERATION_STATUS" != "aborted" ]; then
              echo "The Environment cannot be deployed right now. The current operation status is '$ENV_OPERATION_STATUS'."
              echo ":exclamation: The Environment cannot be deployed right now. The current operation status is '$ENV_OPERATION_STATUS'." >> /github/step_summary.txt
            
              exit 1
            fi
            
            bns environments deploy --non-interactive -o stylish --no-wait
            
            # initially, set pipelinesInProgress to 0 and wait a bit for the pipeline to be created by the queuer
            sleep 3
            pipelinesInProgress=0
            attemptCounter=0
            maxAttempts=60
            timeToRetry=2
            
            # repeat until pipelinesInProgress is greater than 0 or max attempts reached
            until [[ $pipelinesInProgress -gt 0 ]] || [[ $attemptCounter -ge $maxAttempts ]]; do
              echo "Checking for in-progress pipelines (Attempt $((attemptCounter+1))/$maxAttempts)..."
            
              pipelinesInProgress=$(bns pipeline list --status in_progress -o json | jq -r ".totalItems")
            
              if [[ $pipelinesInProgress -le 0 ]]; then
                if [[ $attemptCounter -ge $maxAttempts ]]; then
                  echo "Aborting after $maxAttempts attempts without finding in-progress pipelines."
                  exit 1
                fi
            
                echo "No in-progress pipelines found. Checking again in $timeToRetry seconds..."
                sleep $timeToRetry
              fi
            
              attemptCounter=$(expr $attemptCounter + 1)
            done
            
            if [[ $pipelinesInProgress -gt 0 ]]; then
              PIPELINE_ID=$(bns pipeline list --status in_progress -o json | jq -r "._embedded.item[0].id")
            
              echo "BNS_PIPELINE_ID=$PIPELINE_ID" >> /github/envs.txt
            
              echo "Environment deployment started (Pipeline ID $PIPELINE_ID)"
              echo ":white_check_mark: Environment deployment started (Pipeline ID $PIPELINE_ID)" >> /github/step_summary.txt
            else
              echo "Environment deployment could not be started in $((maxAttempts * timeToRetry)) seconds. Aborted."
              echo ":exclamation: Environment deployment could not be started in $((maxAttempts * timeToRetry)) seconds. Aborted." >> /github/step_summary.txt
            fi
      - name: Comment with PR Environment deploying
        uses: thollander/actions-comment-pull-request@v2
        if: "${{ env.BNS_ENV_ID != '' }}"
        with:
          message: |
            ### :rocket: Preview Environment is deploying on [Bunnyshell](https://www.bunnyshell.com)...

            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ env.BNS_ENV_ID }}) | [Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ env.BNS_PIPELINE_ID }})
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Deploy Environment - wait to finish
        uses: addnab/docker-run-action@v3
        if: "${{ env.BNS_ENV_ID != '' }}"
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -e BUNNYSHELL_ENVIRONMENT=${{ env.BNS_ENV_ID }}
            -v ${{ github.env }}:/github/envs.txt
            -v ${{ github.step_summary }}:/github/step_summary.txt
          run: |
            set -e
            
            echo "Deploy in progress. Waiting to finish..."

            # wait for the deployment to finish
            bns pipeline monitor --id ${{ env.BNS_PIPELINE_ID }} -o stylish
  
            ENDPOINTS_OUTPUT=`bns environments endpoints --non-interactive -o json`
            
            echo "BNS_ENV_ENDPOINTS=`echo $ENDPOINTS_OUTPUT | jq -c`" >> /github/envs.txt
  
            echo "ENDPOINTS_ROWS<<EOF" >> /github/envs.txt
            echo "$ENDPOINTS_OUTPUT" | jq -r '.|map({name, endpoints: .endpoints| join("<br />")}) | .[] |  "|\(.name)|\(.endpoints)|"' >> /github/envs.txt
            echo "EOF" >> /github/envs.txt
            
            echo "Environment deployed successfully"
            echo ":white_check_mark: Environment deployed successfully" >> /github/step_summary.txt
      - name: Comment with PR Environment deployed
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ inputs.comment-on-pr && !inputs.deploy-as-stopped }}
        with:
          message: |
            ### :white_check_mark: Preview Environment deployed on [Bunnyshell](https://www.bunnyshell.com)
  
            |Component|Endpoints|
            |---------|---------|
            ${{ env.ENDPOINTS_ROWS }}
            
            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ env.BNS_ENV_ID }}) | [Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ env.BNS_PIPELINE_ID }})
  
            Available commands:
            - :red_circle: `/bns:stop` to stop the environment
            - :large_blue_circle: `/bns:start` to stop the environment
            - :rocket: `/bns:deploy` to redeploy the environment
            - :x: `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Comment with PR Environment deployment failed
        if: ${{ failure() && inputs.comment-on-pr }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token || github.token }}
          message: |
            ### :exclamation: Preview Environment deployment failed on [Bunnyshell](https://www.bunnyshell.com)
            
            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ env.BNS_ENV_ID }}) | [Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ env.BNS_PIPELINE_ID }})
  
            Check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for details.
  
            Available commands:
            - :rocket: `/bns:deploy` to redeploy the environment
            - :x: `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Evaluate "deploy-as-stopped" option
        run: |
          deploy_as_stopped="${{ inputs.deploy-as-stopped }}"
          
          if [ "$deploy_as_stopped" = "true" ]; then
            echo 'Environment will be stopped (see `deploy-as-stopped` option)'
            echo ':speech_balloon: Environment will be stopped (see `deploy-as-stopped` option)' >> $GITHUB_STEP_SUMMARY
          else
            echo 'Environment will remain running (see `deploy-as-stopped` option)'
            echo ':speech_balloon: Environment will remain running (see `deploy-as-stopped` option)' >> $GITHUB_STEP_SUMMARY
          fi
  stop:
    name: Stop Environment
    runs-on: ${{ inputs.runs-on }}
    needs: deploy
    if: ${{ inputs.deploy-as-stopped && needs.deploy.outputs.env-id != '' }}
    steps:
      - name: Stop Environment
        id: stop-trigger
        uses: addnab/docker-run-action@v3
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -e BUNNYSHELL_ENVIRONMENT=${{ needs.deploy.outputs.env-id }}
            -v ${{ github.env }}:/github/envs.txt
            -v ${{ github.step_summary }}:/github/step_summary.txt
            -v ${{ github.output }}:/github/output.txt
          run: |
            bns environments stop --non-interactive -o stylish --no-wait
            
            # initially, set pipelinesInProgress to 0 and wait a bit for the pipeline to be created by the queuer
            sleep 3
            pipelinesInProgress=0
            attemptCounter=0
            maxAttempts=60
            timeToRetry=2
            
            # repeat until pipelinesInProgress is greater than 0 or max attempts reached
            until [[ $pipelinesInProgress -gt 0 ]] || [[ $attemptCounter -ge $maxAttempts ]]; do
              echo "Checking for in-progress pipelines (Attempt $((attemptCounter+1))/$maxAttempts)..."
            
              pipelinesInProgress=$(bns pipeline list --status in_progress -o json | jq -r ".totalItems")
            
              if [[ $pipelinesInProgress -le 0 ]]; then
                if [[ $attemptCounter -ge $maxAttempts ]]; then
                  echo "Aborting after $maxAttempts attempts without finding in-progress pipelines."
                  exit 1
                fi
            
                echo "No in-progress pipelines found. Checking again in $timeToRetry seconds..."
                sleep $timeToRetry
              fi
            
              attemptCounter=$(expr $attemptCounter + 1)
            done
            
            if [[ $pipelinesInProgress -gt 0 ]]; then
              PIPELINE_ID=`bns pipeline list --status in_progress -o json | jq -r "._embedded.item.[0].id"`
            
              echo "BNS_PIPELINE_ID=$PIPELINE_ID" >> /github/envs.txt
            
              # wait for the stop to finish
              bns pipeline monitor --id ${{ env.BNS_PIPELINE_ID }}
            
              echo 'Environment stopped after deployment (see `deploy-as-stopped` option)'
              echo ':white_check_mark: Environment stopped after deployment (see `deploy-as-stopped` option)' >> /github/step_summary.txt
            else
              echo "Environment could not be stopped in $((maxAttempts * timeToRetry)) seconds. Aborted."
              echo ":exclamation: Environment could not be stopped in $((maxAttempts * timeToRetry)) seconds. Aborted." >> /github/step_summary.txt
            fi
      - name: Comment with PR Environment stopped
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ inputs.comment-on-pr }}
        with:
          message: |
            ### :white_check_mark: Preview Environment created on [Bunnyshell](https://www.bunnyshell.com) and stopped
            
            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ needs.deploy.outputs.env-id }}) | [Deployment Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ needs.deploy.outputs.pipeline-id }}) | [Stop Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ env.BNS_PIPELINE_ID }})
  
            Available commands:
            - :large_blue_circle: `/bns:start` to start the environment
            - :rocket: `/bns:deploy` to redeploy the environment
            - :x: `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
      - name: Comment PR Environment stopping failed
        if: ${{ failure() && inputs.comment-on-pr }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### :exclamation: Preview Environment created on [Bunnyshell](https://www.bunnyshell.com), but not stopped
            
            See: [Environment Details](https://environments.bunnyshell.com/b/environment/${{ needs.deploy.outputs.env-id }}) | [Deployment Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ needs.deploy.outputs.pipeline-id }}) | [Stop Pipeline Logs](https://environments.bunnyshell.com/b/pipeline/${{ env.BNS_PIPELINE_ID }})
  
            Check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for details.
            
            Available commands:
            - :red_circle: `/bns:stop` to stop the environment
            - :rocket: `/bns:deploy` to redeploy the environment
            - :x: `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
          pr_number: ${{ inputs.pr-number }}
