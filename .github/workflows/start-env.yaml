name: Start Bunnyshell Environment
on:
  workflow_call:
    inputs:
      runs-on:
        description: The Platform to execute on
        type: string
        default: ubuntu-latest
      project-id:
        description: The Bunnyshell Project to use
        required: true
        type: string
      env-id:
        description: The ID of the Environment to start
        type: string
      pr-number:
        description: The number of the PR on which to write the comments
        type: string
        required: false
      allowed-users:
        description: The list of the allowed usernames (JSON list). Use '*' for all users.
        type: string
      comment-on-pr:
        description: Write PR comments
        type: boolean
        default: false
      bunnyshell-cli-version:
        description: The version of the Bunnyshell CLI to use
        type: string
        default: v0.18.0
    secrets:
      bunnyshell-access-token:
        required: true
    outputs:
      env-id:
        description: The ID of the Environment
        value: ${{ jobs.start.outputs.env-id }}
      endpoints-json:
        description: The environment endpoints as JSON
        value: ${{ jobs.start.outputs.env-endpoints }}
permissions:
  pull-requests: write
jobs:
  validations:
    name: Validate inputs
    if: ${{ github.event_name != 'issue_comment' || (
          github.event.issue.pull_request
          && contains(github.event.comment.body, '/bns:start')
          && (inputs.allowed-users == '*'
            || contains(fromJSON(inputs.allowed-users), github.event.sender.login)
            || github.event.issue.user.login == github.event.sender.login
          )
        )
      }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Validate env ID or PR number
        if: "${{ inputs.env-id == '' && inputs.pr-number == '' }}"
        run: |
          echo "One of env-id or pr-number inputs is required."
          exit 1
  start:
    name: Start Environment
    runs-on: ${{ inputs.runs-on }}
    outputs:
      env-id: ${{ inputs.env-id || env.BNS_ENV_ID }}
      env-endpoints: ${{ env.BNS_ENV_ENDPOINTS }}
    needs: validations
    steps:
      - name: Search for Environment
        uses: addnab/docker-run-action@v3
        if: ${{ inputs.pr-number != '' }}
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }} -v ${{ github.env }}:/github/envs.txt
          run: |
            set -e
            
            BNS_ENV_ID=`bns environments list --label "auto-gha=pr-${{ inputs.pr-number }}" --project ${{ inputs.project-id }} --non-interactive -o json \
              | jq -r "try ._embedded.item[0].id | select (.!=null)"`

            if [ -z "$BNS_ENV_ID" ]; then
              echo "Could not find environment with label 'auto-gha=pr-${{ inputs.pr-number }}'."
            
              exit 1
            fi

            echo "BNS_ENV_ID=$BNS_ENV_ID" >> /github/envs.txt
      - name: Start Environment
        uses: addnab/docker-run-action@v3
        with:
          image: bunnyshell/cli:${{ inputs.bunnyshell-cli-version }}
          options: >
            -e BUNNYSHELL_TOKEN=${{ secrets.bunnyshell-access-token }}
            -e BUNNYSHELL_ENVIRONMENT=${{ inputs.env-id || env.BNS_ENV_ID }}
            -v ${{ github.env }}:/github/envs.txt
          run: |
            set -e
            
            ENV_OPERATION_STATUS=`bns environments show --non-interactive -o json | jq -r '.operationStatus'`
            if [ "$ENV_OPERATION_STATUS" != "stopped" ] && [ "$ENV_OPERATION_STATUS" != "running" ]; then
              echo "ERROR_MESSAGE=The Environment cannot be started right now. The current operation status is '$ENV_OPERATION_STATUS'." >> /github/envs.txt
            
              echo "The Environment cannot be started right now. The current operation status is '$ENV_OPERATION_STATUS'."
              exit 1
            fi
            
            if [ "$ENV_OPERATION_STATUS" != "running" ]; then
              bns environments start --non-interactive -o stylish
            else
              echo "The environment is already running."
            fi
            
            ENDPOINTS_OUTPUT=`bns environments endpoints --non-interactive -o json`
            
            echo "BNS_ENV_ENDPOINTS=`echo $ENDPOINTS_OUTPUT | jq -c`" >> /github/envs.txt
            
            echo "ENDPOINTS_ROWS<<EOF" >> /github/envs.txt
            echo "$ENDPOINTS_OUTPUT" | jq -r '.|map({name, endpoints: .endpoints| join("<br />")}) | .[] |  "|\(.name)|\(.endpoints)|"' >> /github/envs.txt
            echo "EOF" >> /github/envs.txt
      - name: Comment PR Environment started
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ inputs.comment-on-pr }}
        with:
          message: |
            ### [Bunnyshell](https://www.bunnyshell.com) Preview Environment started
            
            |Component|Endpoints|
            |---------|---------|
            ${{ env.ENDPOINTS_ROWS }}
            
            Available commands:
            - `/bns:stop` to stop the environment
            - `/bns:deploy` to redeploy the environment
            - `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
      - name: Comment PR Environment starting failed
        if: ${{ failure() && inputs.comment-on-pr }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### [Bunnyshell](https://www.bunnyshell.com) Preview Environment starting failed
            
            ${{ env.ERROR_MESSAGE }}
            
            Check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for details.
            
            Available commands:
            - `/bns:start` to start the environment
            - `/bns:deploy` to redeploy the environment
            - `/bns:delete` to remove the environment
          comment_tag: bunnyshell-preview-env
